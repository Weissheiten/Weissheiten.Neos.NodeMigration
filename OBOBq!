[1mdiff --git a/Classes/Weissheiten/Neos/NodeMigration/Migration/Filters/HasParentOfNodeType.php b/Classes/Weissheiten/Neos/NodeMigration/Migration/Filters/HasParentOfNodeType.php[m
[1mindex cf5376e..e45ce5c 100644[m
[1m--- a/Classes/Weissheiten/Neos/NodeMigration/Migration/Filters/HasParentOfNodeType.php[m
[1m+++ b/Classes/Weissheiten/Neos/NodeMigration/Migration/Filters/HasParentOfNodeType.php[m
[36m@@ -8,8 +8,8 @@[m [mnamespace Weissheiten\Neos\NodeMigration\Migration\Filters;[m
  *[m
  */[m
 [m
[31m-use TYPO3\Flow\Annotations as Flow;[m
[31m-use TYPO3\TYPO3CR\Migration\Filters\FilterInterface;[m
[32m+[m[32muse Neos\Flow\Annotations as Flow;[m
[32m+[m[32muse Neos\ContentRepository\Migration\Filters\FilterInterface;[m
 [m
 /**[m
  * Filter nodes with a parent of a specific NodeType nodes[m
[36m@@ -76,10 +76,10 @@[m [mclass HasParentOfNodeType implements FilterInterface[m
     /**[m
      * Returns TRUE if the given node has a parent of a specific nodetype[m
      *[m
[31m-     * @param \TYPO3\TYPO3CR\Domain\Model\NodeData $node[m
[32m+[m[32m     * @param \Neos\ContentRepository\Domain\Model\NodeData $node[m
      * @return boolean[m
      */[m
[31m-    public function matches(\TYPO3\TYPO3CR\Domain\Model\NodeData $node)[m
[32m+[m[32m    public function matches(\Neos\ContentRepository\Domain\Model\NodeData $node)[m
     {[m
         $nodeIsMatchingNodeType = false;[m
 [m
[36m@@ -87,7 +87,7 @@[m [mclass HasParentOfNodeType implements FilterInterface[m
             $parentNode = $node->getParent();[m
 [m
             if($parentNode!==null){[m
[31m-                // This will break atm for NodeTypes that no longer exist - see /Packages/Application/TYPO3.TYPO3CR/Classes/TYPO3/TYPO3CR/Migration/Filters/NodeType.php[m
[32m+[m[32m                // This will break atm for NodeTypes that no longer exist - see /Packages/Application/Neos.ContentRepository/Classes/TYPO3/TYPO3CR/Migration/Filters/NodeType.php[m
                 // version stated there is a "hack" though and does not allow for standard UnitTesting[m
                 $nodeType = $parentNode->getNodeType();[m
 [m
[1mdiff --git a/Tests/Unit/Migration/Filters/HasParentOfNodeTypeTests.php b/Tests/Unit/Migration/Filters/HasParentOfNodeTypeTests.php[m
[1mindex 24071d4..8743b31 100644[m
[1m--- a/Tests/Unit/Migration/Filters/HasParentOfNodeTypeTests.php[m
[1m+++ b/Tests/Unit/Migration/Filters/HasParentOfNodeTypeTests.php[m
[36m@@ -2,11 +2,11 @@[m
 [m
 namespace Weissheiten\Neos\NodeMigration\Tests\Unit\Migration\Filter;[m
 [m
[31m-use TYPO3\TYPO3CR\Domain\Model\Node;[m
[31m-use TYPO3\TYPO3CR\Domain\Model\NodeData;[m
[32m+[m[32muse Neos\ContentRepository\Domain\Model\Node;[m
[32m+[m[32muse Neos\ContentRepository\Domain\Model\NodeData;[m
 use Weissheiten\Neos\NodeMigration\Migration\Filters;[m
 [m
[31m-class HasParentOfNodeTypeTests extends \TYPO3\Flow\Tests\UnitTestCase[m
[32m+[m[32mclass HasParentOfNodeTypeTests extends \Neos\Flow\Tests\UnitTestCase[m
 {[m
 [m
     /**[m
[36m@@ -17,7 +17,7 @@[m [mclass HasParentOfNodeTypeTests extends \TYPO3\Flow\Tests\UnitTestCase[m
         $mockTree = $this->getMockTree();[m
 [m
         $hasParentOfNodeTypeFilter = new \Weissheiten\Neos\NodeMigration\Migration\Filters\HasParentOfNodeType();[m
[31m-        $hasParentOfNodeTypeFilter->setNodeType('TYPO3.Neos.NodeTypes:Page');[m
[32m+[m[32m        $hasParentOfNodeTypeFilter->setNodeType('Neos.NodeTypes:Page');[m
         $hasParentOfNodeTypeFilter->setWithSubTypes(false);[m
         $hasParentOfNodeTypeFilter->setSearchDepth(1);[m
 [m
[36m@@ -32,7 +32,7 @@[m [mclass HasParentOfNodeTypeTests extends \TYPO3\Flow\Tests\UnitTestCase[m
         $mockTree = $this->getMockTree();[m
 [m
         $hasParentOfNodeTypeFilter = new \Weissheiten\Neos\NodeMigration\Migration\Filters\HasParentOfNodeType();[m
[31m-        $hasParentOfNodeTypeFilter->setNodeType('TYPO3.Neos.NodeTypes:Page');[m
[32m+[m[32m        $hasParentOfNodeTypeFilter->setNodeType('Neos.NodeTypes:Page');[m
         $hasParentOfNodeTypeFilter->setWithSubTypes(false);[m
         $hasParentOfNodeTypeFilter->setSearchDepth(99);[m
 [m
[36m@@ -47,7 +47,7 @@[m [mclass HasParentOfNodeTypeTests extends \TYPO3\Flow\Tests\UnitTestCase[m
         $mockTree = $this->getMockTree();[m
 [m
         $hasParentOfNodeTypeFilter = new \Weissheiten\Neos\NodeMigration\Migration\Filters\HasParentOfNodeType();[m
[31m-        $hasParentOfNodeTypeFilter->setNodeType('TYPO3.Neos.NodeTypes:Page');[m
[32m+[m[32m        $hasParentOfNodeTypeFilter->setNodeType('Neos.NodeTypes:Page');[m
         $hasParentOfNodeTypeFilter->setWithSubTypes(false);[m
         $hasParentOfNodeTypeFilter->setSearchDepth(1);[m
 [m
[36m@@ -61,7 +61,7 @@[m [mclass HasParentOfNodeTypeTests extends \TYPO3\Flow\Tests\UnitTestCase[m
         $mockTree = $this->getMockTree();[m
 [m
         $hasParentOfNodeTypeFilter = new \Weissheiten\Neos\NodeMigration\Migration\Filters\HasParentOfNodeType();[m
[31m-        $hasParentOfNodeTypeFilter->setNodeType('TYPO3.Neos.NodeTypes:Image');[m
[32m+[m[32m        $hasParentOfNodeTypeFilter->setNodeType('Neos.NodeTypes:Image');[m
         $hasParentOfNodeTypeFilter->setWithSubTypes(false);[m
         $hasParentOfNodeTypeFilter->setSearchDepth(99);[m
 [m
[36m@@ -75,7 +75,7 @@[m [mclass HasParentOfNodeTypeTests extends \TYPO3\Flow\Tests\UnitTestCase[m
     public function hasParentofSubType(){[m
         $mockTree = $this->getMockTree();[m
         $hasParentOfNodeTypeFilter = new \Weissheiten\Neos\NodeMigration\Migration\Filters\HasParentOfNodeType();[m
[31m-        $hasParentOfNodeTypeFilter->setNodeType('TYPO3.Neos.NodeTypes:Page');[m
[32m+[m[32m        $hasParentOfNodeTypeFilter->setNodeType('Neos.NodeTypes:Page');[m
         $hasParentOfNodeTypeFilter->setWithSubTypes(true);[m
         $hasParentOfNodeTypeFilter->setSearchDepth(2);[m
 [m
[36m@@ -90,21 +90,21 @@[m [mclass HasParentOfNodeTypeTests extends \TYPO3\Flow\Tests\UnitTestCase[m
     private function getMockTree(){[m
         // @var PHPUnit_Framework_MockObject_MockObject|NodeData $mockNodeData[m
         $nodes['siteNode'] = $this->getMockBuilder(NodeData::class)->disableOriginalConstructor()->getMock();[m
[31m-        $nodes['siteNode']->expects($this->any())->method('getNodeType')->will($this->returnValue(new \TYPO3\TYPO3CR\Domain\Model\NodeType('TYPO3.Neos.NodeTypes:Page',[],[])));[m
[32m+[m[32m        $nodes['siteNode']->expects($this->any())->method('getNodeType')->will($this->returnValue(new \Neos\ContentRepository\Domain\Model\NodeType('Neos.NodeTypes:Page',[],[])));[m
 [m
         // @var PHPUnit_Framework_MockObject_MockObject|NodeData $mockNodeData[m
         $nodes['firstLevelNode'] = $this->getMockBuilder(NodeData::class)->disableOriginalConstructor()->getMock();[m
[31m-        $nodes['firstLevelNode']->expects($this->any())->method('getNodeType')->will($this->returnValue(new \TYPO3\TYPO3CR\Domain\Model\NodeType('Custom.Package:SpecialPage',array(0 => new \TYPO3\TYPO3CR\Domain\Model\NodeType('TYPO3.Neos.NodeTypes:Page',[],[])),[])));[m
[32m+[m[32m        $nodes['firstLevelNode']->expects($this->any())->method('getNodeType')->will($this->returnValue(new \Neos\ContentRepository\Domain\Model\NodeType('Custom.Package:SpecialPage',array(0 => new \Neos\ContentRepository\Domain\Model\NodeType('Neos.NodeTypes:Page',[],[])),[])));[m
         $nodes['firstLevelNode']->expects($this->any())->method('getParent')->will($this->returnValue($nodes['siteNode']));[m
 [m
         // @var PHPUnit_Framework_MockObject_MockObject|NodeData $mockNodeData[m
         $nodes['secondLevelNode'] = $this->getMockBuilder(NodeData::class)->disableOriginalConstructor()->getMock();[m
[31m-        $nodes['secondLevelNode']->expects($this->any())->method('getNodeType')->will($this->returnValue(new \TYPO3\TYPO3CR\Domain\Model\NodeType('TYPO3.Neos:ContentCollection',[],[])));[m
[32m+[m[32m        $nodes['secondLevelNode']->expects($this->any())->method('getNodeType')->will($this->returnValue(new \Neos\ContentRepository\Domain\Model\NodeType('Neos.Neos:ContentCollection',[],[])));[m
         $nodes['secondLevelNode']->expects($this->any())->method('getParent')->will($this->returnValue($nodes['firstLevelNode']));[m
 [m
         // @var PHPUnit_Framework_MockObject_MockObject|NodeData $mockNodeData[m
         $nodes['thirdLevelNode'] = $this->getMockBuilder(NodeData::class)->disableOriginalConstructor()->getMock();[m
[31m-        $nodes['thirdLevelNode']->expects($this->any())->method('getNodeType')->will($this->returnValue(new \TYPO3\TYPO3CR\Domain\Model\NodeType('TYPO3.NeosNodeTypes:Text',[],[])));[m
[32m+[m[32m        $nodes['thirdLevelNode']->expects($this->any())->method('getNodeType')->will($this->returnValue(new \Neos\ContentRepository\Domain\Model\NodeType('Neos.NeosNodeTypes:Text',[],[])));[m
         $nodes['thirdLevelNode']->expects($this->any())->method('getParent')->will($this->returnValue($nodes['secondLevelNode']));[m
 [m
         return $nodes;[m
[1mdiff --git a/composer.json b/composer.json[m
[1mindex 7cd4baf..d12da15 100644[m
[1m--- a/composer.json[m
[1m+++ b/composer.json[m
[36m@@ -15,7 +15,77 @@[m
             "package-key": "Weissheiten.Neos.NodeMigration"[m
         },[m
         "applied-flow-migrations": [[m
[31m-            "TYPO3.FLOW3-201201261636"[m
[32m+[m[32m            "TYPO3.FLOW3-201201261636",[m
[32m+[m[32m            "TYPO3.Fluid-201205031303",[m
[32m+[m[32m            "TYPO3.FLOW3-201205292145",[m
[32m+[m[32m            "TYPO3.FLOW3-201206271128",[m
[32m+[m[32m            "TYPO3.FLOW3-201209201112",[m
[32m+[m[32m            "TYPO3.Flow-201209251426",[m
[32m+[m[32m            "TYPO3.Flow-201211151101",[m
[32m+[m[32m            "TYPO3.Flow-201212051340",[m
[32m+[m[32m            "TYPO3.TypoScript-130516234520",[m
[32m+[m[32m            "TYPO3.TypoScript-130516235550",[m
[32m+[m[32m            "TYPO3.TYPO3CR-130523180140",[m
[32m+[m[32m            "TYPO3.Neos.NodeTypes-201309111655",[m
[32m+[m[32m            "TYPO3.Flow-201310031523",[m
[32m+[m[32m            "TYPO3.Flow-201405111147",[m
[32m+[m[32m            "TYPO3.Neos-201407061038",[m
[32m+[m[32m            "TYPO3.Neos-201409071922",[m
[32m+[m[32m            "TYPO3.TYPO3CR-140911160326",[m
[32m+[m[32m            "TYPO3.Neos-201410010000",[m
[32m+[m[32m            "TYPO3.TYPO3CR-141101082142",[m
[32m+[m[32m            "TYPO3.Neos-20141113115300",[m
[32m+[m[32m            "TYPO3.Fluid-20141113120800",[m
[32m+[m[32m            "TYPO3.Flow-20141113121400",[m
[32m+[m[32m            "TYPO3.Fluid-20141121091700",[m
[32m+[m[32m            "TYPO3.Neos-20141218134700",[m
[32m+[m[32m            "TYPO3.Fluid-20150214130800",[m
[32m+[m[32m            "TYPO3.Neos-20150303231600",[m
[32m+[m[32m            "TYPO3.TYPO3CR-20150510103823",[m
[32m+[m[32m            "TYPO3.Flow-20151113161300",[m
[32m+[m[32m            "TYPO3.Form-20160601101500",[m
[32m+[m[32m            "TYPO3.Flow-20161115140400",[m
[32m+[m[32m            "TYPO3.Flow-20161115140430",[m
[32m+[m[32m            "Neos.Flow-20161124204700",[m
[32m+[m[32m            "Neos.Flow-20161124204701",[m
[32m+[m[32m            "Neos.Twitter.Bootstrap-20161124204912",[m
[32m+[m[32m            "Neos.Form-20161124205254",[m
[32m+[m[32m            "Neos.Flow-20161124224015",[m
[32m+[m[32m            "Neos.Party-20161124225257",[m
[32m+[m[32m            "Neos.Eel-20161124230101",[m
[32m+[m[32m            "Neos.Kickstart-20161124230102",[m
[32m+[m[32m            "Neos.Setup-20161124230842",[m
[32m+[m[32m            "Neos.Imagine-20161124231742",[m
[32m+[m[32m            "Neos.Media-20161124233100",[m
[32m+[m[32m            "Neos.NodeTypes-20161125002300",[m
[32m+[m[32m            "Neos.SiteKickstarter-20161125002311",[m
[32m+[m[32m            "Neos.Neos-20161125002322",[m
[32m+[m[32m            "Neos.ContentRepository-20161125012000",[m
[32m+[m[32m            "Neos.Fusion-20161125013710",[m
[32m+[m[32m            "Neos.Setup-20161125014759",[m
[32m+[m[32m            "Neos.SiteKickstarter-20161125095901",[m
[32m+[m[32m            "Neos.Fusion-20161125104701",[m
[32m+[m[32m            "Neos.NodeTypes-20161125104800",[m
[32m+[m[32m            "Neos.Neos-20161125104802",[m
[32m+[m[32m            "Neos.Kickstarter-20161125110814",[m
[32m+[m[32m            "Neos.Neos-20161125122412",[m
[32m+[m[32m            "Neos.Flow-20161125124112",[m
[32m+[m[32m            "TYPO3.FluidAdaptor-20161130112935",[m
[32m+[m[32m            "Neos.Fusion-20161201202543",[m
[32m+[m[32m            "Neos.Neos-20161201222211",[m
[32m+[m[32m            "Neos.Fusion-20161202215034",[m
[32m+[m[32m            "Neos.Fusion-20161219092345",[m
[32m+[m[32m            "Neos.ContentRepository-20161219093512",[m
[32m+[m[32m            "Neos.Media-20161219094126",[m
[32m+[m[32m            "Neos.Neos-20161219094403",[m
[32m+[m[32m            "Neos.Neos-20161219122512",[m
[32m+[m[32m            "Neos.Fusion-20161219130100",[m
[32m+[m[32m            "Neos.Neos-20161220163741",[m
[32m+[m[32m            "Neos.Neos-20170115114620",[m
[32m+[m[32m            "Neos.Fusion-20170120013047",[m
[32m+[m[32m            "Neos.Flow-20170125103800",[m
[32m+[m[32m            "Neos.Seo-20170127154600",[m
[32m+[m[32m            "Neos.Flow-20170127183102"[m
         ][m
     },[m
     "license": "GPL-3.0+",[m
